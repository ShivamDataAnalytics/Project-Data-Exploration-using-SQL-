select @@version;
SELECT *
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 3,4;

--SELECT *
--FROM PortfolioProject..CovidVaccinations
--ORDER BY 3,4;

SELECT location , date , total_cases,new_cases,total_deaths , population
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 1,2 ; 

--Looking at Total Cases vs Total Deaths 
SELECT location , date , total_cases,total_deaths ,(total_deaths/total_cases)*100 AS DeathPercent
FROM PortfolioProject..CovidDeaths
WHERE location like '%state%' AND  continent IS NOT NULL
ORDER BY 1,2 ; 

--Loooking at Total Cases vs Population 

SELECT location , date , total_cases,population ,(total_cases/population)*100 AS CasePercent
FROM PortfolioProject..CovidDeaths
--WHERE location like '%state%'
WHERE continent IS NOT NULL
ORDER BY 1,2 ; 

--Looking at Countries with highest infection rate compared to  Population
SELECT location ,  Max(total_cases) AS HighestInfectionCount,population ,Max(total_cases/population)*100 AS PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
--WHERE location like '%state%'
WHERE continent IS NOT NULL
GROUP BY location , population
ORDER BY PercentPopulationInfected
DESC;

--Showing Countries with Highest Death Count per Population

SELECT location , MAX(CAST(total_deaths AS int))AS TotalDeathCount
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY TotalDeathCount DESC ;

--EXPLORING DATA THROUGH CONTINET CATEGORY 
SELECT continent , MAX(CAST(total_deaths AS int))AS TotalDeathCount
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC ;

--Another check by including NULL CONTINENTS and Grouping by location category 

SELECT location , MAX(CAST(total_deaths AS int))AS TotalDeathCount
FROM PortfolioProject..CovidDeaths
WHERE continent IS NULL
GROUP BY location
ORDER BY TotalDeathCount DESC ;

SELECT date ,SUM(new_cases) AS TotalCases ,SUM(CAST(new_deaths AS bigint))AS TotalDeaths ,SUM(CAST(new_deaths AS bigint))/SUM(new_cases)*100 AS DeathPercent
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL 
GROUP BY date
ORDER BY 1,2;


--TOTAL CASES , TOTAL DEATHS , DEATH PERCENT 
SELECT  SUM(new_cases) AS TotalCases ,SUM(CAST(new_deaths AS bigint))AS TotalDeaths ,SUM(CAST(new_deaths AS bigint))/SUM(new_cases)*100 AS DeathPercent
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL 
--GROUP BY date
ORDER BY 1,2;

--Data for Covid Vaccinations around the World 
SELECT *FROM PortfolioProject..CovidVaccinations ORDER BY 3,4;

--Joining the two Data Tables TO LOOK FOR COMPARISON BETWEEN TOTAL POPULATION vs VACCINATIONS 
SELECT *
FROM PortfolioProject..CovidDeaths  dea
JOIN PortfolioProject..CovidVaccinations  vac
ON dea.location=vac.location
AND dea.date=vac.date;


SELECT dea.continent , dea.location,dea.date,dea.population,(vac.new_vaccinations),
SUM(CAST(vac.new_vaccinations AS bigint))OVER(PARTITION BY dea.location ORDER BY dea.location , dea.date) AS RollingPeopleVaacinated
FROM PortfolioProject..CovidDeaths  dea
JOIN PortfolioProject..CovidVaccinations  vac
ON dea.location=vac.location
AND dea.date=vac.date
WHERE dea.continent IS NOT NULL 
ORDER BY 2,3 ;

--USE OF CTE

WITH PopvsVac (Continent,Location,Date,Population,New_Vaccinations,RollingPeopleVaccinated)as
(SELECT 
dea.continent , dea.location,dea.date,dea.population,(vac.new_vaccinations),
SUM(CAST(vac.new_vaccinations AS bigint))OVER(PARTITION BY dea.location ORDER BY dea.location , dea.date) AS RollingPeopleVaacinated
FROM PortfolioProject..CovidDeaths  dea
JOIN PortfolioProject..CovidVaccinations  vac
ON dea.location=vac.location
AND dea.date=vac.date
WHERE dea.continent IS NOT NULL 
)
SELECT *, (RollingPeopleVaccinated/Population)*100
FROM PopvsVac

--USE OF TEMP TABLE 
DROP TABLE IF EXISTS #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_Vaccinatiions numeric,
RollingPeopleVaccinated numeric
)

INSERT INTO #PercentPopulationVaccinated
SELECT 
dea.continent , dea.location,dea.date,dea.population,(vac.new_vaccinations),
SUM(CAST(vac.new_vaccinations AS bigint))OVER(PARTITION BY dea.location ORDER BY dea.location , dea.date) AS RollingPeopleVaacinated
FROM PortfolioProject..CovidDeaths  dea
JOIN PortfolioProject..CovidVaccinations  vac
ON dea.location=vac.location
AND dea.date=vac.date
--WHERE dea.continent IS NOT NULL
SELECT *, (RollingPeopleVaccinated/Population)*100
FROM #PercentPopulationVaccinated
DROP VIEW IF EXISTS PercentPopulationVaccinated 
--Creating View to store data for later Visualisations 

CREATE VIEW PercentPopulationVaccinated AS 
SELECT 
dea.continent , dea.location,dea.date,dea.population,vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations AS bigint))OVER(PARTITION BY dea.location ORDER BY dea.location , dea.date) AS RollingPeopleVaacinated
FROM PortfolioProject..CovidDeaths  dea
JOIN PortfolioProject..CovidVaccinations  vac
ON dea.location=vac.location
AND dea.date=vac.date
WHERE dea.continent IS NOT NULL
--ORDER BY 2,3;


















